---
name: goreleaser

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
         go-version-file: 'go.mod'

      - name: Install osxcross for CGO cross-compilation
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y clang llvm-dev libxml2-dev uuid-dev libssl-dev bash patch make tar xz-utils bzip2 gzip sed cpio libbz2-dev

          # Clone osxcross
          git clone https://github.com/tpoechtrager/osxcross /tmp/osxcross
          cd /tmp/osxcross

          # Download macOS SDK (using the publicly available SDK)
          wget -q https://github.com/joseluisq/macosx-sdks/releases/download/14.5/MacOSX14.5.sdk.tar.xz -O tarballs/MacOSX14.5.sdk.tar.xz

          # Build osxcross
          UNATTENDED=1 OSX_VERSION_MIN=11.0 ./build.sh

          # Add to PATH for subsequent steps
          echo "/tmp/osxcross/target/bin" >> $GITHUB_PATH

      - name: Install Quill
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/quill/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Import Code Signing Certificates
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Create temporary directory for certificates
          CERT_DIR=$(mktemp -d)

          # Decode and save the P12 certificate
          echo "${{ secrets.APPLE_CERTIFICATE_P12_BASE64 }}" | base64 --decode > "$CERT_DIR/certificate.p12"

          # Export path for goreleaser to use
          echo "QUILL_P12_PATH=$CERT_DIR/certificate.p12" >> $GITHUB_ENV
          echo "QUILL_P12_PASSWORD=${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          QUILL_P12_PATH: ${{ env.QUILL_P12_PATH }}
          QUILL_P12_PASSWORD: ${{ env.QUILL_P12_PASSWORD }}

      - name: Cleanup Certificates
        if: always() && startsWith(github.ref, 'refs/tags/')
        run: |
          # Clean up temporary certificate files
          if [ -f "$QUILL_P12_PATH" ]; then
            rm -f "$QUILL_P12_PATH"
            rm -rf "$(dirname "$QUILL_P12_PATH")"
          fi
